{"version":3,"file":"main.js","mappings":";;;;;;;;;;AAAa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB,mBAAO,CAAC,+CAAiB;AACjD,mBAAO,CAAC,oCAAa;AACrB,iBAAiB,mBAAO,CAAC,iCAAU;AACnC,iBAAiB,mBAAO,CAAC,iCAAU;AACnC,eAAe,mBAAO,CAAC,6BAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACvCa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc;AACd,cAAc,mBAAO,CAAC,2BAAO;AAC7B,eAAe,mBAAO,CAAC,6BAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;;;;;;;;;;AC1BD;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB;AACA;AACA,aAAa;AACb;AACA,kBAAkB;;;;;;;;;;;ACPL;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;;;;;;;;;;ACvBP;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,eAAe;AACf;AACA;AACA;AACA;AACA,WAAW;;;;;;;;;;;ACdE;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc;AACd,iBAAiB,mBAAO,CAAC,iCAAU;AACnC,eAAe,mBAAO,CAAC,6BAAQ;AAC/B,eAAe,mBAAO,CAAC,6BAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC,wBAAwB,WAAW;AACnC;AACA,4BAA4B,oBAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACxDa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc;AACd,mBAAmB,mBAAO,CAAC,qCAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;;;;;;;;;;ACpCD;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;;;;;;;;;;ACVA;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,YAAY;AACZ;AACA;AACA;AACA;AACA,UAAU;AACV,UAAU;AACV,UAAU;AACV,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,mBAAmB,WAAW,EAAE,WAAW,EAAE,UAAU;AACvD;AACA;AACA;AACA;AACA;AACA,YAAY;;;;;;;UCvDZ;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;ACtBa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB,mBAAO,CAAC,+CAAiB;AACjD,mBAAO,CAAC,oCAAa;AACrB,iBAAiB,mBAAO,CAAC,iCAAU;AACnC,iBAAiB,mBAAO,CAAC,iCAAU;AACnC,eAAe,mBAAO,CAAC,6BAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://raytracing-in-one-weekend.ts/./src/index.css?7c80","webpack://raytracing-in-one-weekend.ts/./src/camera.ts","webpack://raytracing-in-one-weekend.ts/./src/hittable.ts","webpack://raytracing-in-one-weekend.ts/./src/hittable_list.ts","webpack://raytracing-in-one-weekend.ts/./src/ray.ts","webpack://raytracing-in-one-weekend.ts/./src/render.ts","webpack://raytracing-in-one-weekend.ts/./src/sphere.ts","webpack://raytracing-in-one-weekend.ts/./src/util.ts","webpack://raytracing-in-one-weekend.ts/./src/vec3.ts","webpack://raytracing-in-one-weekend.ts/webpack/bootstrap","webpack://raytracing-in-one-weekend.ts/./src/index.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst hittable_list_1 = require(\"./hittable_list\");\nrequire(\"./index.css\");\nconst render_1 = require(\"./render\");\nconst sphere_1 = require(\"./sphere\");\nconst vec3_1 = require(\"./vec3\");\nlet canvas;\nlet world;\nlet renderer;\n(() => {\n    window.addEventListener('load', () => {\n        const body = document.body;\n        canvas = document.createElement('canvas');\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        body.appendChild(canvas);\n        const nav = document.createElement('nav');\n        const textarea = document.createElement('textarea');\n        nav.appendChild(textarea);\n        body.appendChild(nav);\n        world = new hittable_list_1.HittableList();\n        world.push(new sphere_1.Sphere(new vec3_1.Vec3(0, 0, -1), 0.5));\n        world.push(new sphere_1.Sphere(new vec3_1.Vec3(0, -100.5, -1), 100));\n        renderer = render_1.render(canvas, world);\n        window.addEventListener('resize', onResize);\n        renderingLoop();\n    });\n})();\nfunction onResize() {\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    renderer = render_1.render(canvas, world);\n}\nfunction renderingLoop() {\n    if (renderer.next().done) {\n        renderer = render_1.render(canvas, world);\n    }\n    requestAnimationFrame(renderingLoop);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Camera = void 0;\nconst ray_1 = require(\"./ray\");\nconst vec3_1 = require(\"./vec3\");\nclass Camera {\n    constructor(aspectRatio) {\n        const viewportHeight = 2.0;\n        const viewportWidth = aspectRatio * viewportHeight;\n        const focalLength = 1;\n        this.origin = new vec3_1.Vec3(0, 0, 0);\n        this.horizontal = new vec3_1.Vec3(viewportWidth, 0, 0);\n        this.vertical = new vec3_1.Vec3(0, viewportHeight, 0);\n        this.lowerLeftCorner =\n            this.origin.clone()\n                .sub(this.horizontal.clone().mul(0.5))\n                .sub(this.vertical.clone().mul(0.5))\n                .sub(new vec3_1.Vec3(0, 0, focalLength));\n    }\n    getRay(u, v) {\n        return new ray_1.Ray(this.origin, this.lowerLeftCorner.clone()\n            .add(this.horizontal.clone().mul(u))\n            .add(this.vertical.clone().mul(v))\n            .sub(this.origin));\n    }\n}\nexports.Camera = Camera;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.faceNormal = void 0;\nfunction faceNormal(r, outwardNormal) {\n    const frontFace = r.direction().dot(outwardNormal) < 0;\n    return { face: frontFace, normal: frontFace ? outwardNormal : outwardNormal.clone().neg() };\n}\nexports.faceNormal = faceNormal;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HittableList = void 0;\nclass HittableList {\n    constructor() {\n        this.objects = [];\n    }\n    push(object) {\n        this.objects.push(object);\n    }\n    hit(r, tMin, tMax) {\n        let closestSoFar = tMax;\n        let rec = null;\n        for (const object of this.objects) {\n            const tempRec = object.hit(r, tMin, closestSoFar);\n            if (tempRec !== null) {\n                closestSoFar = tempRec.t;\n                rec = tempRec;\n            }\n        }\n        return rec;\n    }\n}\nexports.HittableList = HittableList;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Ray = void 0;\nclass Ray {\n    constructor(origin, direction) {\n        this.orig = origin;\n        this.dir = direction;\n    }\n    direction() { return this.dir; }\n    origin() { return this.orig; }\n    at(t) {\n        return this.orig.clone().add(this.dir.clone().mul(t));\n    }\n}\nexports.Ray = Ray;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.render = void 0;\nconst camera_1 = require(\"./camera\");\nconst util_1 = require(\"./util\");\nconst vec3_1 = require(\"./vec3\");\nfunction* render(canvas, world) {\n    let prevTime = performance.now();\n    const width = canvas.width;\n    const height = canvas.height;\n    const samplePerPixel = 50;\n    const aspectRatio = width / height;\n    const ctx = canvas.getContext('2d');\n    if (ctx === null) {\n        console.error('failed to get context');\n        return;\n    }\n    const cam = new camera_1.Camera(aspectRatio);\n    const data = ctx.getImageData(0, 0, width, height);\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            const colorAcc = new vec3_1.Vec3(0, 0, 0);\n            for (let i = 0; i < samplePerPixel; i++) {\n                const u = (x + Math.random()) / width;\n                const v = 1 - (y + Math.random()) / height;\n                const ray = cam.getRay(u, v);\n                const color = ray_color(ray, world);\n                colorAcc.add(color);\n            }\n            const pixelColor = colorAcc.mul(1 / samplePerPixel);\n            const r = util_1.clamp(pixelColor.e[0], 0, 1);\n            const g = util_1.clamp(pixelColor.e[1], 0, 1);\n            const b = util_1.clamp(pixelColor.e[2], 0, 1);\n            data.data[(y * width + x) * 4 + 0] = 255 * r;\n            data.data[(y * width + x) * 4 + 1] = 255 * g;\n            data.data[(y * width + x) * 4 + 2] = 255 * b;\n            data.data[(y * width + x) * 4 + 3] = 255;\n        }\n        const nowTime = performance.now();\n        if (15 < nowTime - prevTime) {\n            prevTime = nowTime;\n            ctx.putImageData(data, 0, 0);\n            yield;\n        }\n    }\n}\nexports.render = render;\nfunction ray_color(r, world) {\n    const rec = world.hit(r, 0, 100);\n    if (rec !== null) {\n        const N = rec.normal;\n        return new vec3_1.Vec3(N.x() + 1, N.y() + 1, N.z() + 1).mul(0.5);\n    }\n    const unitDirection = r.direction().clone().normalize();\n    const t = 0.5 * (unitDirection.y() + 1.0);\n    return new vec3_1.Vec3(1, 1, 1).mul(1 - t).add(new vec3_1.Vec3(0.5, 0.7, 1.0).mul(t));\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Sphere = void 0;\nconst hittable_1 = require(\"./hittable\");\nclass Sphere {\n    constructor(cen, r) {\n        this.center = cen;\n        this.radius = r;\n    }\n    hit(r, tMin, tMax) {\n        const oc = r.origin().clone().sub(this.center);\n        const a = r.direction().length_squared();\n        const halfB = oc.dot(r.direction());\n        const c = oc.length_squared() - this.radius * this.radius;\n        const discriminant = halfB * halfB - a * c;\n        if (discriminant < 0) {\n            return null;\n        }\n        const sqrtD = Math.sqrt(discriminant);\n        let root = (-halfB - sqrtD) / a;\n        if (root < tMin || tMax < root) {\n            root = (-halfB + sqrtD) / a;\n            if (root < tMin || tMax < root) {\n                return null;\n            }\n        }\n        const pos = r.at(root);\n        const front = hittable_1.faceNormal(r, pos.clone().sub(this.center).div(this.radius));\n        return {\n            t: root,\n            p: pos,\n            normal: front.normal,\n            frontFace: front.face\n        };\n    }\n}\nexports.Sphere = Sphere;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clamp = void 0;\nfunction clamp(x, min, max) {\n    if (x < min)\n        return min;\n    if (max < x)\n        return max;\n    return x;\n}\nexports.clamp = clamp;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Vec3 = void 0;\nclass Vec3 {\n    constructor(e0, e1, e2) {\n        this.e = [e0, e1, e2];\n    }\n    x() { return this.e[0]; }\n    y() { return this.e[1]; }\n    z() { return this.e[2]; }\n    neg() { return new Vec3(-this.e[0], -this.e[0], -this.e[0]); }\n    add(v) {\n        this.e[0] += v.e[0];\n        this.e[1] += v.e[1];\n        this.e[2] += v.e[2];\n        return this;\n    }\n    sub(v) {\n        this.e[0] -= v.e[0];\n        this.e[1] -= v.e[1];\n        this.e[2] -= v.e[2];\n        return this;\n    }\n    mul(t) {\n        this.e[0] *= t;\n        this.e[1] *= t;\n        this.e[2] *= t;\n        return this;\n    }\n    div(t) {\n        this.e[0] /= t;\n        this.e[1] /= t;\n        this.e[2] /= t;\n        return this;\n    }\n    normalize() {\n        return this.mul(1 / this.length());\n    }\n    dot(v) {\n        return this.e[0] * v.e[0] + this.e[1] * v.e[1] + this.e[2] * v.e[2];\n    }\n    cross(v) {\n        return new Vec3(this.e[1] * v.e[2] - this.e[2] * v.e[1], this.e[2] * v.e[0] - this.e[0] * v.e[2], this.e[0] * v.e[1] - this.e[1] * v.e[0]);\n    }\n    length_squared() {\n        return this.e[0] * this.e[0] + this.e[1] * this.e[1] + this.e[2] * this.e[2];\n    }\n    length() { return Math.sqrt(this.length_squared()); }\n    toString() {\n        return `(${this.e[0]} ${this.e[1]} ${this.e[2]})`;\n    }\n    clone() {\n        return new Vec3(this.e[0], this.e[1], this.e[2]);\n    }\n}\nexports.Vec3 = Vec3;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst hittable_list_1 = require(\"./hittable_list\");\nrequire(\"./index.css\");\nconst render_1 = require(\"./render\");\nconst sphere_1 = require(\"./sphere\");\nconst vec3_1 = require(\"./vec3\");\nlet canvas;\nlet world;\nlet renderer;\n(() => {\n    window.addEventListener('load', () => {\n        const body = document.body;\n        canvas = document.createElement('canvas');\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        body.appendChild(canvas);\n        const nav = document.createElement('nav');\n        const textarea = document.createElement('textarea');\n        nav.appendChild(textarea);\n        body.appendChild(nav);\n        world = new hittable_list_1.HittableList();\n        world.push(new sphere_1.Sphere(new vec3_1.Vec3(0, 0, -1), 0.5));\n        world.push(new sphere_1.Sphere(new vec3_1.Vec3(0, -100.5, -1), 100));\n        renderer = render_1.render(canvas, world);\n        window.addEventListener('resize', onResize);\n        renderingLoop();\n    });\n})();\nfunction onResize() {\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    renderer = render_1.render(canvas, world);\n}\nfunction renderingLoop() {\n    if (renderer.next().done) {\n        renderer = render_1.render(canvas, world);\n    }\n    requestAnimationFrame(renderingLoop);\n}\n"],"names":[],"sourceRoot":""}